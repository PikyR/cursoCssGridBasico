.item {
  border: 5px solid lightcoral;
  font-size: 1.5rem;
}
.container {
  border: 5px solid royalblue;
  background-color: skyblue;
  margin-bottom: 20px;

  display: grid;

  /* EJEMPLOS */
  /* Este template-colums va a ocupar todo el ancho disponible y crea 4 columnas iguales que se adaptan al espacio disponible, hasta el minimo que ocupa su contenido*/
  /* grid-template-columns: repeat(4, 1fr); */
  
  /* Esta disposicion logra que las columnas 1 y 2 sean de el minimo de ancho y las otras columnas creceran mas, segun su valor. Todas se contraen hasta el minimo que ocupa su contenido */
  /* grid-template-columns: 1fr 3fr 1fr 2fr; */

  /* la columna con el valor 'min-content' se contrae hasta el minimo ancho que ocupa su contenido, el resto de columnas se divide el expacio restante segun su valor */
  /* grid-template-columns: 1fr 3fr min-content 2fr; */
  
  /* la columna con el valor 'max-content' se ensancha tanto como pueda su contenido y nose contrae */
  /* grid-template-columns: 1fr 3fr max-content 2fr; */
}

.container--1 {
  grid-template-columns: 1fr 3fr max-content 2fr;
}


.container--2 {
  grid-template-columns: repeat(auto-fill, minmax(150px, 1fr));
}
.container--3 {
  grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
}

